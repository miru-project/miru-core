basePath: /
definitions:
  anilist.AnilistDate:
    properties:
      day:
        type: integer
      month:
        type: integer
      year:
        type: integer
    type: object
  anilist.AnilistEditListJson:
    properties:
      endDate:
        $ref: '#/definitions/anilist.AnilistDate'
      id:
        type: string
      isPrivate:
        type: boolean
      mediaId:
        type: string
      progress:
        type: integer
      score:
        type: number
      startDate:
        $ref: '#/definitions/anilist.AnilistDate'
      status:
        type: string
    type: object
  download.AvailableHlsVariant:
    properties:
      codec:
        type: string
      resolution:
        type: string
      url:
        type: string
    type: object
  download.DownloadOptions:
    properties:
      download_path:
        type: string
      header:
        additionalProperties:
          type: string
        type: object
      is_hls:
        type: boolean
      url:
        type: string
    type: object
  download.MultipleLinkJson:
    properties:
      header:
        additionalProperties:
          type: string
        type: object
      is_downloading:
        type: boolean
      key:
        $ref: '#/definitions/m3u8.Key'
      task_id:
        type: integer
      variant:
        items:
          $ref: '#/definitions/m3u8.Variant'
        type: array
      variant_summary:
        items:
          $ref: '#/definitions/download.AvailableHlsVariant'
        type: array
    type: object
  ent.AppSetting:
    properties:
      id:
        description: ID of the ent.
        type: integer
      key:
        description: Key
        type: string
      value:
        description: Value
        type: string
    type: object
  ext.AppSettingJson:
    properties:
      key:
        type: string
      value:
        type: string
    type: object
  jsExtension.ExtensionBangumiWatch:
    properties:
      audioTrack:
        type: string
      headers:
        additionalProperties:
          type: string
        type: object
      subtitles:
        items:
          $ref: '#/definitions/jsExtension.ExtensionBangumiWatchSubtitle'
        type: array
      type:
        type: string
      url:
        type: string
    type: object
  jsExtension.ExtensionBangumiWatchSubtitle:
    properties:
      language:
        type: string
      title:
        type: string
      url:
        type: string
    type: object
  jsExtension.ExtensionDetail:
    properties:
      cover:
        type: string
      desc:
        type: string
      episodes:
        items:
          $ref: '#/definitions/jsExtension.ExtensionEpisodeGroup'
        type: array
      headers:
        additionalProperties:
          type: string
        type: object
      title:
        type: string
    type: object
  jsExtension.ExtensionEpisode:
    properties:
      name:
        type: string
      url:
        type: string
    type: object
  jsExtension.ExtensionEpisodeGroup:
    properties:
      title:
        type: string
      urls:
        items:
          $ref: '#/definitions/jsExtension.ExtensionEpisode'
        type: array
    type: object
  jsExtension.ExtensionFikushonWatch:
    properties:
      content:
        items:
          type: string
        type: array
      subtitle:
        type: string
      title:
        type: string
    type: object
  jsExtension.ExtensionListItem:
    properties:
      cover:
        type: string
      headers:
        additionalProperties:
          type: string
        type: object
      title:
        type: string
      update:
        type: string
      url:
        type: string
    type: object
  jsExtension.ExtensionMangaWatch:
    properties:
      headers:
        additionalProperties:
          type: string
        type: object
      urls:
        items:
          type: string
        type: array
    type: object
  m3u8.Alternative:
    properties:
      autoselect:
        type: string
      characteristics:
        type: string
      default:
        type: boolean
      forced:
        type: string
      groupId:
        type: string
      language:
        type: string
      name:
        type: string
      subtitles:
        type: string
      type:
        type: string
      uri:
        type: string
    type: object
  m3u8.Key:
    properties:
      iv:
        type: string
      keyformat:
        type: string
      keyformatversions:
        type: string
      method:
        type: string
      uri:
        type: string
    type: object
  m3u8.Map:
    properties:
      limit:
        description: <n> is length in bytes for the file under URI
        type: integer
      offset:
        description: '[@o] is offset from the start of the file under URI'
        type: integer
      uri:
        type: string
    type: object
  m3u8.MediaPlaylist:
    properties:
      args:
        description: optional arguments placed after URIs (URI?Args)
        type: string
      closed:
        description: is this VOD (closed) or Live (sliding) playlist?
        type: boolean
      custom:
        additionalProperties: {}
        type: object
      discontinuitySeq:
        description: EXT-X-DISCONTINUITY-SEQUENCE
        type: integer
      iframe:
        description: EXT-X-I-FRAMES-ONLY
        type: boolean
      key:
        allOf:
        - $ref: '#/definitions/m3u8.Key'
        description: EXT-X-KEY is optional encryption key displayed before any segments
          (default key for the playlist)
      map:
        allOf:
        - $ref: '#/definitions/m3u8.Map'
        description: EXT-X-MAP is optional tag specifies how to obtain the Media Initialization
          Section (default map for the playlist)
      mediaType:
        $ref: '#/definitions/m3u8.MediaType'
      segments:
        items:
          $ref: '#/definitions/m3u8.MediaSegment'
        type: array
      seqNo:
        description: EXT-X-MEDIA-SEQUENCE
        type: integer
      startTime:
        type: number
      startTimePrecise:
        type: boolean
      targetDuration:
        type: number
      wv:
        allOf:
        - $ref: '#/definitions/m3u8.WV'
        description: Widevine related tags outside of M3U8 specs
    type: object
  m3u8.MediaSegment:
    properties:
      custom:
        additionalProperties: {}
        type: object
      discontinuity:
        description: EXT-X-DISCONTINUITY indicates an encoding discontinuity between
          the media segment that follows it and the one that preceded it (i.e. file
          format, number and type of tracks, encoding parameters, encoding sequence,
          timestamp sequence)
        type: boolean
      duration:
        description: first parameter for EXTINF tag; duration must be integers if
          protocol version is less than 3 but we are always keep them float
        type: number
      key:
        allOf:
        - $ref: '#/definitions/m3u8.Key'
        description: EXT-X-KEY displayed before the segment and means changing of
          encryption key (in theory each segment may have own key)
      limit:
        description: EXT-X-BYTERANGE <n> is length in bytes for the file under URI
        type: integer
      map:
        allOf:
        - $ref: '#/definitions/m3u8.Map'
        description: EXT-X-MAP displayed before the segment
      offset:
        description: EXT-X-BYTERANGE [@o] is offset from the start of the file under
          URI
        type: integer
      programDateTime:
        description: EXT-X-PROGRAM-DATE-TIME tag associates the first sample of a
          media segment with an absolute date and/or time
        type: string
      scte:
        allOf:
        - $ref: '#/definitions/m3u8.SCTE'
        description: SCTE-35 used for Ad signaling in HLS
      seqId:
        type: integer
      title:
        description: optional second parameter for EXTINF tag
        type: string
      uri:
        type: string
    type: object
  m3u8.MediaType:
    enum:
    - 1
    - 2
    type: integer
    x-enum-varnames:
    - EVENT
    - VOD
  m3u8.SCTE:
    properties:
      cue:
        type: string
      cueType:
        allOf:
        - $ref: '#/definitions/m3u8.SCTE35CueType'
        description: CueType defines whether the cue is a start, mid, end (if applicable)
      elapsed:
        type: number
      id:
        type: string
      syntax:
        allOf:
        - $ref: '#/definitions/m3u8.SCTE35Syntax'
        description: Syntax defines the format of the SCTE-35 cue tag
      time:
        type: number
    type: object
  m3u8.SCTE35CueType:
    enum:
    - 0
    - 1
    - 2
    type: integer
    x-enum-comments:
      SCTE35Cue_End: SCTE35Cue_End indicates an in cue point
      SCTE35Cue_Mid: SCTE35Cue_Mid indicates a segment between start and end cue points
      SCTE35Cue_Start: SCTE35Cue_Start indicates an out cue point
    x-enum-varnames:
    - SCTE35Cue_Start
    - SCTE35Cue_Mid
    - SCTE35Cue_End
  m3u8.SCTE35Syntax:
    enum:
    - 0
    - 1
    type: integer
    x-enum-comments:
      SCTE35_67_2014: SCTE35_67_2014 defined in http://www.scte.org/documents/pdf/standards/SCTE%2067%202014.pdf
      SCTE35_OATCLS: SCTE35_OATCLS is a non-standard but common format
    x-enum-varnames:
    - SCTE35_67_2014
    - SCTE35_OATCLS
  m3u8.Variant:
    properties:
      alternatives:
        description: EXT-X-MEDIA
        items:
          $ref: '#/definitions/m3u8.Alternative'
        type: array
      audio:
        description: EXT-X-STREAM-INF only
        type: string
      averageBandwidth:
        description: EXT-X-STREAM-INF only
        type: integer
      bandwidth:
        type: integer
      captions:
        description: EXT-X-STREAM-INF only
        type: string
      chunklist:
        $ref: '#/definitions/m3u8.MediaPlaylist'
      codecs:
        type: string
      frameRate:
        description: EXT-X-STREAM-INF
        type: number
      hdcplevel:
        type: string
      iframe:
        description: EXT-X-I-FRAME-STREAM-INF
        type: boolean
      name:
        description: EXT-X-STREAM-INF only (non standard Wowza/JWPlayer extension
          to name the variant/quality in UA)
        type: string
      programId:
        type: integer
      resolution:
        type: string
      subtitles:
        description: EXT-X-STREAM-INF only
        type: string
      uri:
        type: string
      video:
        type: string
      videoRange:
        type: string
    type: object
  m3u8.WV:
    properties:
      audioChannels:
        type: integer
      audioFormat:
        type: integer
      audioProfileIDC:
        type: integer
      audioSampleSize:
        type: integer
      audioSamplingFrequency:
        type: integer
      cypherVersion:
        type: string
      ecm:
        type: string
      videoFormat:
        type: integer
      videoFrameRate:
        type: integer
      videoLevelIDC:
        type: integer
      videoProfileIDC:
        type: integer
      videoResolution:
        type: string
      videoSAR:
        type: string
    type: object
  map_string_string:
    additionalProperties:
      type: string
    type: object
  result.Result-array_ent_AppSetting:
    properties:
      code:
        type: integer
      data:
        items:
          $ref: '#/definitions/ent.AppSetting'
        type: array
      message:
        type: string
      success:
        type: boolean
    type: object
  result.Result-download_MultipleLinkJson:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/download.MultipleLinkJson'
      message:
        type: string
      success:
        type: boolean
    type: object
  result.Result-jsExtension_ExtensionBangumiWatch:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/jsExtension.ExtensionBangumiWatch'
      message:
        type: string
      success:
        type: boolean
    type: object
  result.Result-jsExtension_ExtensionDetail:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/jsExtension.ExtensionDetail'
      message:
        type: string
      success:
        type: boolean
    type: object
  result.Result-jsExtension_ExtensionFikushonWatch:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/jsExtension.ExtensionFikushonWatch'
      message:
        type: string
      success:
        type: boolean
    type: object
  result.Result-jsExtension_ExtensionListItems:
    properties:
      code:
        type: integer
      data:
        items:
          $ref: '#/definitions/jsExtension.ExtensionListItem'
        type: array
      message:
        type: string
      success:
        type: boolean
    type: object
  result.Result-jsExtension_ExtensionMangaWatch:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/jsExtension.ExtensionMangaWatch'
      message:
        type: string
      success:
        type: boolean
    type: object
  result.Result-map_string_string:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/map_string_string'
      message:
        type: string
      success:
        type: boolean
    type: object
  result.Result-string:
    properties:
      code:
        type: integer
      data:
        type: string
      message:
        type: string
      success:
        type: boolean
    type: object
  router.WebDavLoginJson:
    properties:
      host:
        type: string
      passwd:
        type: string
      user:
        type: string
    type: object
host: 127.127.127.127:12777
info:
  contact:
    name: API Support
    url: https://github.com/miru-project
  description: Miru Core API documentation
  license:
    name: MIT
    url: https://github.com/miru-project/miru-core/blob/main/LICENSE
  title: Miru Core API
  version: "1.0"
paths:
  /:
    get:
      description: Returns basic information about Miru
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/result.Result-string'
      summary: Root endpoint
      tags:
      - root
  /anilist:
    get:
      description: Handles Anilist OAuth redirect flow
      produces:
      - text/html
      responses:
        "200":
          description: Redirecting HTML
          schema:
            type: string
      summary: Redirect for Anilist OAuth
      tags:
      - anilist
  /anilist/collection/{userId}/{mediaType}:
    get:
      description: Retrieves a user's media collection from Anilist
      parameters:
      - description: User ID
        in: path
        name: userId
        required: true
        type: string
      - description: Media type (ANIME or MANGA)
        in: path
        name: mediaType
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/result.Result-map_string_string'
        "500":
          description: Failed to retrieve collection
          schema:
            $ref: '#/definitions/result.Result-string'
      summary: Get Anilist collection
      tags:
      - anilist
  /anilist/edit:
    post:
      consumes:
      - application/json
      description: Update or create an entry in the user's Anilist
      parameters:
      - description: List entry data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/anilist.AnilistEditListJson'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/result.Result-map_string_string'
        "400":
          description: Invalid JSON
          schema:
            $ref: '#/definitions/result.Result-string'
        "500":
          description: Edit failed
          schema:
            $ref: '#/definitions/result.Result-string'
      summary: Edit Anilist list entry
      tags:
      - anilist
  /anilist/media/{page}/{mediaType}:
    get:
      consumes:
      - text/plain
      description: Search for anime or manga on Anilist
      parameters:
      - description: Page number
        in: path
        name: page
        required: true
        type: string
      - description: Media type (ANIME or MANGA)
        in: path
        name: mediaType
        required: true
        type: string
      - description: Search query
        in: body
        name: query
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/result.Result-map_string_string'
        "500":
          description: Search failed
          schema:
            $ref: '#/definitions/result.Result-string'
      summary: Search Anilist media
      tags:
      - anilist
  /anilist/token:
    get:
      description: Processes and stores the Anilist authentication token
      produces:
      - text/plain
      responses:
        "200":
          description: OK
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/result.Result-string'
      summary: Process Anilist token
      tags:
      - anilist
  /anilist/user:
    get:
      description: Retrieves authenticated user data from Anilist
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/result.Result-map_string_string'
        "500":
          description: Failed to retrieve user data
          schema:
            $ref: '#/definitions/result.Result-string'
      summary: Get Anilist user data
      tags:
      - anilist
  /appSetting:
    get:
      description: Retrieves the current application settings
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/result.Result-array_ent_AppSetting'
      summary: Get application settings
      tags:
      - settings
    put:
      consumes:
      - application/json
      description: Updates the application settings with new values
      parameters:
      - description: Application settings
        in: body
        name: settings
        required: true
        schema:
          items:
            $ref: '#/definitions/ext.AppSettingJson'
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/result.Result-string'
        "400":
          description: Invalid JSON
          schema:
            $ref: '#/definitions/result.Result-string'
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/result.Result-string'
      summary: Update application settings
      tags:
      - settings
  /download/bangumi:
    post:
      consumes:
      - application/json
      description: Start downloading bangumi content with specified options
      parameters:
      - description: Download Options
        in: body
        name: options
        required: true
        schema:
          $ref: '#/definitions/download.DownloadOptions'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/result.Result-download_MultipleLinkJson'
        "400":
          description: Invalid JSON
          schema:
            $ref: '#/definitions/result.Result-string'
      summary: Download bangumi content
      tags:
      - download
  /download/cancel/{id}:
    post:
      description: Cancel a specific download task by ID
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/result.Result-string'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/result.Result-string'
      summary: Cancel a download task
      tags:
      - download
  /download/pause/{id}:
    post:
      description: Pause an active download task by ID
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/result.Result-string'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/result.Result-string'
      summary: Pause a download task
      tags:
      - download
  /download/resume/{id}:
    post:
      description: Resume a paused download task by ID
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/result.Result-string'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/result.Result-string'
      summary: Resume a download task
      tags:
      - download
  /drive/backup:
    get:
      description: Backup the Miru database to a connected WebDav server
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/result.Result-string'
        "500":
          description: Backup failed
          schema:
            $ref: '#/definitions/result.Result-string'
      summary: Backup database to WebDav
      tags:
      - webdav
  /drive/login:
    post:
      consumes:
      - application/json
      description: Authenticate with a WebDav server
      parameters:
      - description: WebDav login credentials
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/router.WebDavLoginJson'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/result.Result-string'
        "400":
          description: Invalid JSON or missing required fields
          schema:
            $ref: '#/definitions/result.Result-string'
      summary: Login to WebDav server
      tags:
      - webdav
  /drive/restore:
    get:
      description: Restore the Miru database from a backup on a connected WebDav server
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/result.Result-string'
        "500":
          description: Restore failed
          schema:
            $ref: '#/definitions/result.Result-string'
      summary: Restore database from WebDav
      tags:
      - webdav
  /ext/detail/{pkg}:
    get:
      consumes:
      - application/json
      description: Get detailed information about content from a specific package
      parameters:
      - description: Package identifier
        in: path
        name: pkg
        required: true
        type: string
      - description: URL encoded content path
        in: body
        name: url
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/result.Result-jsExtension_ExtensionDetail'
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/result.Result-string'
      summary: Get content details
      tags:
      - extension
  /ext/latest/{pkg}/{page}:
    get:
      description: Retrieves the latest content from a specific extension package
      parameters:
      - description: Package identifier
        in: path
        name: pkg
        required: true
        type: string
      - description: Page number
        in: path
        name: page
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/result.Result-jsExtension_ExtensionListItems'
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/result.Result-string'
      summary: Get latest content from extension
      tags:
      - extension
  /ext/search/{pkg}/{page}/{kw}:
    get:
      consumes:
      - application/json
      description: Search for content in a specific extension package
      parameters:
      - description: Package identifier
        in: path
        name: pkg
        required: true
        type: string
      - description: Page number
        in: path
        name: page
        required: true
        type: string
      - description: Search keyword
        in: path
        name: kw
        required: true
        type: string
      - description: Filter options in JSON format
        in: body
        name: filter
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/result.Result-jsExtension_ExtensionListItems'
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/result.Result-string'
      summary: Search content via extension
      tags:
      - extension
  /ext/watch/{pkg}:
    get:
      consumes:
      - application/json
      description: Get watch information for content from a specific package
      parameters:
      - description: Package identifier
        in: path
        name: pkg
        required: true
        type: string
      - description: URL encoded content path
        in: body
        name: url
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/result.Result-jsExtension_ExtensionBangumiWatch'
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/result.Result-jsExtension_ExtensionFikushonWatch'
      summary: Watch content via extension
      tags:
      - extension
schemes:
- http
- https
swagger: "2.0"
